{"version":3,"sources":["util/SessionHeaderUtil.js","components/SignUpLogInPlaceholder.js","components/FlashError.js","components/Login.js","components/SignUp.js","components/SignUpLogIn.js","components/Preview.js","components/SearchResult.js","components/SearchResults.js","components/AddRecipe.js","components/RecipesList.js","components/GlobalNav.js","components/Recipe.js","App.js","serviceWorker.js","index.js"],"names":["saveAuthTokens","headers","axios","defaults","client","uid","expiry","localStorage","setItem","userIsLoggedIn","getItem","setAxiosDefaults","clearAuthTokens","removeItem","SignUpLogInPlaceholderWrapper","styled","div","SignUpLogInPlaceholder","header","this","props","showLogin","content","onClick","toggleLogin","Component","shakeAnimation","keyframes","shake","FlashErrorContainer","theme","justifyContent","FlashErrorDismissButton","button","FlashError","error","dismissError","className","aria-hidden","LoginWrapper","LoginInputWrapper","LoginInput","input","LoginFormWrapper","LoginButtonWrapper","LoginButton","Login","state","email","password","handleChange","event","newState","target","name","value","setState","signIn","a","payload","post","setUserSignedIn","errorMessage","response","status","onChange","type","placeholder","SignUpLogInWrapper","SignUpInput","SignUpFormWrapper","SignUpButtonWrapper","SignUpButton","SignUp","password_confirmation","signUp","SignUpLogIn","login","Preview","modalOpen","handleOpen","handleClose","addNewRecipe","ingredients","servings","calories","instructions","img","ingredientsList","split","map","ingredient","i","style","padding","key","Modal","size","closeIcon","open","onClose","Grid","relaxed","stackable","Row","centered","textAlign","divided","Column","width","Image","src","alt","verticalAlign","Math","round","stretched","rel","href","Button","icon","labelPosition","color","Icon","SearchResult","openPreview","togglePreview","Card","Content","Header","Description","SearchResults","recipeResults","searchResults","recipe","label","text","join","yield","url","image","toggleAddRecipe","columns","padded","doubling","AddRecipe","searchQuery","transferResult","data","hits","inputChangeHandler","searchButtonHandler","get","process","REACT_APP_API_ID","REACT_APP_API_KEY","handleKeyPress","Input","focus","onKeyPress","trigger","RecipesList","recipes","link","as","Link","to","id","reverse","GlobalNavWrapper","GlobalNavLogoWrapper","GlobalNavLogo","GlobalNavHeader","span","SessionButtonWrapper","SessionButton","GlobalNav","signOut","preventDefault","delete","console","log","signOutButton","signedIn","Recipe","componentDidMount","getRecipe","recipeResponse","recipeId","match","params","deleteRecipe","window","location","replace","height","App","newRecipe","getRecipes","handleSubmitRecipe","exact","path","render","component","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f43569b2.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport function saveAuthTokens (headers) {\n    // Set Axios Headers with Auth tokens for the next request.\n    axios.defaults.headers['access-token'] = headers['access-token']\n    axios.defaults.headers.client = headers.client\n    axios.defaults.headers.uid = headers.uid\n    axios.defaults.headers.expiry = headers.expiry\n  \n    // Save Auth tokens to localStorage to persist log-in if the window is closed\n    localStorage.setItem('access-token', headers['access-token'])\n    localStorage.setItem('client', headers.client)\n    localStorage.setItem('uid', headers.uid)\n    localStorage.setItem('expiry', headers.expiry)\n  }\n\n  export function userIsLoggedIn() {\n    // check to see if our local storage contains any session data\n    const userLoggedIn = (\n        !!localStorage.getItem('access-token') &&\n        !!localStorage.getItem('client') &&\n        !!localStorage.getItem('uid') &&\n        !!localStorage.getItem('expiry')\n    )\n\n    return userLoggedIn\n}\n\nexport function setAxiosDefaults(){\n  // tell axios to use the existing session data from the last User\n  axios.defaults.headers['access-token'] = localStorage.getItem(\"access-token\"); \n  axios.defaults.headers.client = localStorage.getItem(\"client\"); \n  axios.defaults.headers.uid = localStorage.getItem(\"uid\"); \n  axios.defaults.headers.expiry = localStorage.getItem(\"expiry\"); \n}\n\nexport function clearAuthTokens() {\n  // clearing out our session data \n  localStorage.removeItem('access-token')\n  localStorage.removeItem('client')\n  localStorage.removeItem('uid')\n  localStorage.removeItem('expiry')\n}","import React, { Component } from 'react'\nimport styled from 'styled-components'\n\n\nconst SignUpLogInPlaceholderWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    cursor: pointer;\n    text-align: center;\n    width: 300px;\n    z-index: 3;\n`\n\nexport default class SignUpLogInPlaceholder extends Component {\n    render() {\n        const header = this.props.showLogin ? \"Don't have an account?\" : \"Already have an account?\"\n        const content = this.props.showLogin ? \"Sign up\" : \"Log in\"\n        return (\n            <SignUpLogInPlaceholderWrapper>\n                <h2>{header}</h2>\n                <div onClick={this.props.toggleLogin}><u>{content}</u> now</div>\n            </SignUpLogInPlaceholderWrapper>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport styled, {keyframes, ThemeProvider} from 'styled-components'\nimport { shake } from 'react-animations'\n\nconst shakeAnimation = keyframes`${shake}`\n\nconst FlashErrorContainer = styled.div`\n    display: flex;\n    padding: 7px;\n    justify-content: ${props => props.theme.justifyContent};\n    align-items: center;\n    border-radius: 5px;\n    color: #e24626;\n    box-shadow: 2px 2px 10px lightgray;\n    background: white;\n    margin-top: 35px;\n    animation: 0.08s ${shakeAnimation};\n`\n\nconst FlashErrorDismissButton = styled.button`\n       padding-left: 7px;\n    color: #e24626;\n    border: none;\n    background: white;\n    font-size: 15px;\n    \n    &:focus {\n        outline: none;\n    }\n`\n\nconst theme = {\n    justifyContent: 'center'\n}\n\nexport default class FlashError extends Component {\n  render() {\n    return (\n        <ThemeProvider theme={theme}>\n        <FlashErrorContainer>\n            <div>{this.props.error}</div>\n            <div>\n                <FlashErrorDismissButton onClick={this.props.dismissError}><i className=\"fa fa-times-circle\" aria-hidden=\"true\"></i></FlashErrorDismissButton>\n            </div>\n        </FlashErrorContainer>\n    </ThemeProvider>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport { saveAuthTokens } from '../util/SessionHeaderUtil'\nimport axios from 'axios'\nimport FlashError from './FlashError';\n\n\nconst LoginWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  width: 50vw;\n  z-index: 3;\n`\n\nconst LoginInputWrapper = styled.div`\n`\n\nconst LoginInput = styled.input`\n  padding: 0px 10px;\n  height: 30px;\n  margin-bottom: 15px;\n  border-radius: 2px;\n  border: 1px solid lightgray;\n  width: 70%;\n`\n\nconst LoginFormWrapper = styled.div`\n  width: 40vw;\n`\n\nconst LoginButtonWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding-top: 10px;\n`\n\nconst LoginButton = styled.button`\n  border: none;\n  padding: 10px 15px;\n  border-radius: 5%;\n  text-align: center;\n  color: white;\n  background-color: #BA324F;\n  text-decoration: none;\n  cursor: pointer;\n`\nexport default class Login extends Component {\n  state = {\n    email: '',\n    password: '',\n    error: ''\n  }\n\n  handleChange = (event) => {\n    const newState = { ...this.state }\n    newState[event.target.name] = event.target.value\n    this.setState(newState)\n  }\n\n  signIn = async () => {\n    try {\n      const payload = {\n        email: this.state.email,\n        password: this.state.password\n      }\n      const response = await axios.post('/auth/sign_in', payload)\n      saveAuthTokens(response.headers)\n\n      this.props.setUserSignedIn()\n\n    } catch (error) {\n      let errorMessage = ''\n      if (error.response.status === 401) {\n        errorMessage = \"Invalid email and/or password\"\n      }\n      this.setState({ error: errorMessage })\n    }\n  }\n\n  dismissError = () => {\n    this.setState({error: ''})\n}\n\n  render() {\n    return (\n      \n        <LoginWrapper>\n          <h1>Log In</h1>\n          <LoginFormWrapper>\n            <form>\n              <LoginInputWrapper>\n                <LoginInput onChange={this.handleChange}\n                  type=\"text\"\n                  name=\"email\"\n                  placeholder=\"email\"\n                  value={this.state.email} />\n              </LoginInputWrapper>\n              <LoginInputWrapper>\n                <LoginInput onChange={this.handleChange}\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"password\"\n                  value={this.state.password} />\n              </LoginInputWrapper>\n            </form>\n          </LoginFormWrapper>\n          <LoginButtonWrapper>\n            <LoginButton onClick={this.signIn}>Log In</LoginButton>\n          </LoginButtonWrapper>\n          {this.state.error ? <FlashError error={this.state.error} dismissError={this.dismissError} /> : null}\n\n        </LoginWrapper>\n        \n\n      \n    )\n  }\n}\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport { saveAuthTokens } from '../util/SessionHeaderUtil'\nimport axios from 'axios'\nimport FlashError from './FlashError';\n\n\nconst SignUpLogInWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  width: 50vw;\n  z-index: 40vw;\n`\n\nconst SignUpInput = styled.input`\n  padding: 0px 10px;\n  height: 30px;\n  margin-bottom: 15px;\n  border-radius: 2px;\n  border: 1px solid lightgray;\n  width: 40vw;\n`\n\nconst SignUpFormWrapper = styled.div`\n  width: 40vw;\n`\n\nconst SignUpButtonWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding-top: 10px;\n`\n\nconst SignUpButton = styled.button`\n  border: none;\n  margin: 0px 6px;\n  padding: 10px 15px;\n  border-radius: 5%;\n  text-align: center;\n  color: white;\n  background-color: #BA324F;\n  text-decoration: none;\n  cursor: pointer;\n  `\n\nexport default class SignUp extends Component {\n  state = {\n    email: '',\n    password: '',\n    password_confirmation: '',\n    error: ''\n  }\n\n  handleChange = (event) => {\n    const newState = { ...this.state }\n    newState[event.target.name] = event.target.value\n    this.setState(newState)\n  }\n\n  signUp = async () => {\n    try {\n\n      const payload = {\n        email: this.state.email,\n        password: this.state.password,\n        password_confirmation: this.state.password_confirmation\n      }\n\n      const response = await axios.post('/auth', payload)\n\n      saveAuthTokens(response.headers)\n\n      this.props.setUserSignedIn()\n\n    } catch (error) {\n      let errorMessage = ''\n      if (error.response.status === 422) {\n        errorMessage = 'Invaild email and/or passwords do not match'\n      }\n      this.setState({ error: errorMessage })\n    }\n  }\n\n  dismissError = () => {\n    this.setState({ error: '' })\n  }\n\n  render() {\n    return (\n      <div>\n        <SignUpLogInWrapper>\n          <h1>Sign Up</h1>\n          <SignUpFormWrapper>\n            <form>\n              <div>\n                <SignUpInput onChange={this.handleChange}\n                  type=\"text\"\n                  name=\"email\"\n                  placeholder=\"email\"\n                  value={this.state.email} />\n              </div>\n              <div>\n                <SignUpInput onChange={this.handleChange}\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"password\"\n                  value={this.state.password} />\n              </div>\n              <div>\n                <SignUpInput onChange={this.handleChange}\n                  type=\"password\"\n                  name=\"password_confirmation\"\n                  placeholder=\"confirm password\"\n                  value={this.state.password_confirmation} />\n              </div>\n            </form>\n          </SignUpFormWrapper>\n          <SignUpButtonWrapper>\n            <SignUpButton onClick={this.signUp}>Sign Up</SignUpButton>\n          </SignUpButtonWrapper>\n        </SignUpLogInWrapper>\n\n        {this.state.error ? <FlashError error={this.state.error} dismissError={this.dismissError} /> : null}\n\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport SignUpLogInPlaceholder from './SignUpLogInPlaceholder';\nimport Login from './Login';\nimport SignUp from './SignUp';\n\nconst SignUpLogInWrapper = styled.div`\n    display: flex;\n    justify-content: space-around;\n    align-items: flex-start;\n    background: white;\n    padding: 5% 10%;\n`\n\nexport default class SignUpLogIn extends Component {\n    state = {\n        showLogin: true,\n    }\n\n    toggleLogin = () => {\n        this.setState({ showLogin: !this.state.showLogin })\n    }\n\n    render() {\n        const placeholder = (<SignUpLogInPlaceholder showLogin={this.state.showLogin} toggleLogin={this.toggleLogin} />)\n\n        const login = (\n            <SignUpLogInWrapper>\n                <Login setUserSignedIn={this.props.setUserSignedIn} />\n                {placeholder}\n            </SignUpLogInWrapper>\n        )\n\n        const signUp = (\n            <SignUpLogInWrapper>\n                {placeholder}\n                <SignUp  setUserSignedIn={this.props.setUserSignedIn} />\n            </SignUpLogInWrapper>\n        )\n        return (\n            <div>\n                {this.state.showLogin ? login : signUp}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Modal, Grid, Image, Button, Icon } from 'semantic-ui-react';\n\nexport default class Preview extends Component {\n    state = {\n        modalOpen: true\n    }\n\n    handleOpen = () => {\n        this.setState({ modalOpen: true })\n    }\n\n    handleClose = () => this.setState({ modalOpen: false })\n\n    addNewRecipe = (name, ingredients, servings, calories, instructions, img) => {\n        this.props.addNewRecipe(name, ingredients, servings, calories, instructions, img)\n        this.props.handleClose()\n    }\n\n    render() {\n\n        const ingredientsStr = this.props.ingredients + ''\n\n        const ingStrSplit = ingredientsStr.split(/,(?! )/)\n\n        const ingredientsList = ingStrSplit.map((ingredient, i) => {\n            return (\n                <div style={{ padding: '0 0 15px 0' }} key={i}>{ingredient}</div>\n            )\n        })\n        return (\n\n\n            <Modal\n                size='fullscreen'\n                closeIcon\n                open={this.state.modalOpen}\n                onClose={this.handleClose} >\n\n                <Grid relaxed stackable>\n                    <Grid.Row style={{ padding: '40px 0 0 0' }} centered textAlign='center'>\n                        <h2>{this.props.name}</h2>\n                    </Grid.Row>\n\n                    <Grid.Row divided centered >\n                        <Grid.Column width={6}>\n                            <Image centered src={this.props.img} alt='recipe img' />\n                        </Grid.Column>\n\n                        <Grid.Column verticalAlign=\"middle\" width={3}>\n                            <h3>{this.props.servings}</h3>\n                            Servings\n                    </Grid.Column>\n\n                        <Grid.Column verticalAlign='middle' width={3}>\n                            <h3>{Math.round(this.props.calories / this.props.servings)}</h3>\n                            Calories/Serving:\n                    </Grid.Column>\n                    </Grid.Row>\n\n                    <Grid.Row style={{ padding: '0 0 40px 0' }} divided centered>\n                        <Grid.Column textAlign='left' stretched width={5}>\n                            <h3>Ingredients:</h3>\n                            {ingredientsList}\n                        </Grid.Column>\n\n                        <Grid.Column textAlign='center' stretched width={5}>\n                                <div>\n                                    <h3>Preparation</h3>\n                                    <a target='_blank' rel=\"noopener noreferrer\" href={this.props.instructions}><h4>Instructions</h4></a>\n                                </div>\n                                <div>\n                                    <Button size ='large' icon labelPosition='left' color='green' onClick={() => this.addNewRecipe(\n                                        this.props.name, this.props.ingredients, this.props.servings,\n                                        this.props.calories, this.props.instructions, this.props.img)}\n                                    > \n                                    <Icon name='plus square' />\n                                    Save\n                                    </Button>\n                                </div>\n                        </Grid.Column>\n\n                    </Grid.Row>\n\n                </Grid>\n\n                {/* <Modal.Header>{this.props.name}</Modal.Header>\n                <Modal.Content image>\n                    <Image wrapped src={this.props.img} alt='recipe img' />\n                    <Modal.Description>\n                        <h3>Servings:</h3> {this.props.servings}\n                        <h3>Calories/Serving:</h3> {Math.round(this.props.calories / this.props.servings)}\n                        <div>\n                            <h3>Ingredients:</h3>\n                            {ingredientsList}\n                        </div>\n                        <div>\n                            <h3>Preparation</h3>\n                            <a target='_blank' rel=\"noopener noreferrer\" href={this.props.instructions}><h3>Instructions</h3> </a></div>\n                    </Modal.Description>\n                    <Button onClick={() => this.addNewRecipe(\n                        this.props.name, this.props.ingredients, this.props.servings,\n                        this.props.calories, this.props.instructions, this.props.img)}\n                    > Add to Recipes\n                </Button>\n                </Modal.Content> */}\n            </Modal >\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Preview from './Preview';\nimport { Grid, Image, Card} from 'semantic-ui-react';\n\nexport default class SearchResult extends Component {\n    state = {\n        openPreview: false\n    }\n\n    togglePreview = () => {\n        this.setState({ openPreview: !this.state.openPreview })\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.openPreview ?\n                    <Preview\n                        name={this.props.name}\n                        img={this.props.img}\n                        ingredients={this.props.ingredients}\n                        servings={this.props.servings}\n                        calories={this.props.calories}\n                        instructions={this.props.instructions}\n                        addNewRecipe={this.props.addNewRecipe}\n                        handleClose={this.props.handleClose}\n                        togglePreview={this.togglePreview}\n                        openPreview={this.state.openPreview}\n                    /> :\n                   <Grid.Column style={{ padding: '0 0 3vw 0'}}>\n                        <Card onClick={this.togglePreview}>\n                        <Image src={this.props.img} alt='recipe img' />\n                            <Card.Content>\n                                <Card.Header textAlign='center'>{this.props.name}</Card.Header>\n                                <Card.Description textAlign='center'>{Math.round(this.props.calories / this.props.servings)} Calories | {this.props.servings} Servings</Card.Description>\n                            </Card.Content>\n                        </Card>\n                    </Grid.Column>\n                }\n            </div>\n\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport SearchResult from './SearchResult';\nimport { Grid } from 'semantic-ui-react';\n\nexport default class SearchResults extends Component {\n    render() {\n        const recipeResults = this.props.searchResults.map((recipe, i) => {\n            return (\n\n                <SearchResult\n                    key={i}\n                    name={recipe.recipe.label}\n                    ingredients={recipe.recipe.ingredients.map(ingredient => ingredient.text).join()}\n                    servings={recipe.recipe.yield}\n                    calories={Math.round(recipe.recipe.calories)}\n                    instructions={recipe.recipe.url}\n                    img={recipe.recipe.image}\n                    addNewRecipe={this.props.addNewRecipe}\n                    handleClose={this.props.handleClose}\n                    toggleAddRecipe={this.props.toggleAddRecipe}\n                />\n            )\n        })\n\n        return (\n            <div>\n                <Grid columns={4} padded doubling centered>\n                    {recipeResults}\n                </Grid>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport SearchResults from './SearchResults'\nimport { Input, Button, Icon, Modal, Image } from 'semantic-ui-react'\n\nexport default class AddRecipe extends Component {\n    state = {\n        searchQuery: '',\n        searchResults: [],\n        modalOpen: false\n    }\n\n    transferResult = (response) => {\n        this.setState({ searchResults: response.data.hits })\n    }\n\n    inputChangeHandler = (event) => {\n        this.setState({ searchQuery: event.target.value })\n    }\n\n    searchButtonHandler = async () => {\n        const response = await axios.get(`https://api.edamam.com/search?q=${this.state.searchQuery}&app_id=${process.env.REACT_APP_API_ID}&app_key=${process.env.REACT_APP_API_KEY}&from=0&to=25`)\n        this.transferResult(response)\n        this.handleOpen()\n    }\n\n    handleOpen = () => this.setState({ modalOpen: true })\n\n    handleClose = () => this.setState({\n        searchQuery: '',\n        searchResults: [],\n        modalOpen: false\n    })\n\n    handleKeyPress = (event) => {\n        if (event.key === 'Enter') {\n            this.searchButtonHandler()\n        }\n    }\n\n    render() {\n        return (\n            <div style={{ textAlign: 'center' }}>\n\n                <Input\n                    type='text'\n                    focus\n                    centered\n                    style={{ width: '50vw' }}\n                    placeholder='Search for a Recipe...'\n                    value={this.state.searchQuery}\n                    onChange={this.inputChangeHandler}\n                    onKeyPress={this.handleKeyPress} >\n                </Input>\n\n                <Modal\n                    trigger={\n                        <Button icon onClick={this.searchButtonHandler}>\n                            <Icon name='search' />\n                        </Button>}\n                    size='fullscreen'\n                    closeIcon\n                    centered={false}\n                    open={this.state.modalOpen}\n                    onClose={this.handleClose} >\n\n                    <Modal.Content>\n                        <SearchResults\n                            searchResults={this.state.searchResults}\n                            addNewRecipe={this.props.addNewRecipe}\n                            handleClose={this.handleClose} />\n                    </Modal.Content>\n                </Modal>\n\n                <Image centered src='../../img/edamam_logo.png' alt='edamam logo'></Image>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Card, Image, Grid, Header } from 'semantic-ui-react'\nimport AddRecipe from './AddRecipe';\n\nexport default class RecipesList extends Component {\n\n    render() {\n        const recipes = this.props.recipes.map((recipe, i) => {\n            return (\n                <Grid.Column key={i}>\n                    <Card link as={Link} to={`/recipes/${recipe.id}`} >\n                        <Image src={recipe.img} alt='recipe img' />\n                        <Card.Content>\n                            <Card.Header>{recipe.name}</Card.Header>\n                            <Card.Description>{Math.round(recipe.calories / recipe.servings)} Calories | {recipe.servings} Servings</Card.Description>\n                        </Card.Content>\n                    </Card>\n                </Grid.Column>\n            )\n        })\n        return (\n            <div>\n\n                <Header textAlign='center'  size='huge'>My Recipes</Header>\n\n                <AddRecipe addNewRecipe={this.props.addNewRecipe} />\n\n                <Grid columns={5} padded doubling>\n                    {recipes.reverse()}\n                </Grid>\n            </div>\n        )\n    }\n}\n\n","import React, { Component } from 'react'\nimport { clearAuthTokens } from '../util/SessionHeaderUtil'\nimport axios from 'axios'\nimport styled from 'styled-components'\n\nconst GlobalNavWrapper = styled.div`\n  width:100%;\n  height:auto; \n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 15px 18px;\n  box-shadow: 0 4px 10px -2px lightgray;\n  margin-bottom: 35px;\n  background-color: #175676;\n\n`\n\nconst GlobalNavLogoWrapper = styled.div`\n  display: flex;\n`\n\nconst GlobalNavLogo = styled.img`\n  height: 30px;\n  border-radius: 10%;\n`\n\nconst GlobalNavHeader = styled.span`\n  margin-left: 15px;\n  text-align: center;\n  font-size: 30px;\n  color: white;\n  font-family: 'Oswald', sans-serif;\n`\n\nconst SessionButtonWrapper = styled.div`\ndisplay:flex;\nflex-wrap:wrap;\ncolor:white;\n`\n\nconst SessionButton = styled.button`\n  border: none;\n  padding: 10px 15px;\n  margin-left: 10px;\n  border-radius: 5%;\n  text-align: center;\n  color: white;\n  background-color: #4BA3C3;\n  text-decoration: none;\n  cursor: pointer;\n`\n\nexport default class GlobalNav extends Component {\n\n    signOut = async (event) => {\n\n        try {\n            event.preventDefault()\n            await axios.delete('/auth/sign_out')\n\n            clearAuthTokens();\n\n            this.props.signOut()\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    render() {\n        const email = localStorage.getItem('uid')\n\n        const signOutButton =\n            <SessionButton onClick={this.signOut}> Sign Out</SessionButton>\n\n        return (\n            <GlobalNavWrapper>\n\n                <GlobalNavLogoWrapper>\n                    <div>\n                        <GlobalNavLogo\n                            src=\"../../img/whats_cooking_logo.jpg\"\n                            alt=\"Knife Logo\" />\n                        <GlobalNavHeader>What's Cooking</GlobalNavHeader>\n                    </div>\n                </GlobalNavLogoWrapper>\n\n                <SessionButtonWrapper>\n                    {email}\n                    {this.props.signedIn ? signOutButton : null}\n                </SessionButtonWrapper>\n\n            </GlobalNavWrapper>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Link, Redirect } from 'react-router-dom'\nimport axios from 'axios';\nimport { Grid, Image, Button, Icon } from 'semantic-ui-react';\n\nexport default class Recipe extends Component {\n    state = {\n        recipe: {}\n    }\n\n    componentDidMount = async () => {\n        const recipeResponse = await this.getRecipe()\n\n        this.setState({\n            recipe: recipeResponse.data\n        })\n    }\n\n    getRecipe = async () => {\n        const recipeId = this.props.match.params.id\n        return await axios.get(`/recipes/${recipeId}`)\n    }\n\n    deleteRecipe = async () => {\n        const recipeId = this.props.match.params.id\n        await axios.delete(`/recipes/${recipeId}`)\n        window.location.replace('/')\n    }\n\n    render() {\n\n        const recipe = this.state.recipe\n\n        const ingredientsStr = recipe.ingredients + ''\n\n        const ingStrSplit = ingredientsStr.split(/,(?! )/)\n\n        const ingredientsList = ingStrSplit.map((ingredient, i) => {\n            return (\n                <div style={{ padding: '0 0 15px 0' }} key={i}>{ingredient}</div>\n            )\n        })\n\n        return (\n            <Grid relaxed stackable>z\n                <Grid.Row textAlign='center' >\n                    <Grid.Column width={2}>\n                        <Link to='/recipes'>\n                            <Icon size='big' link name='arrow left' />\n                        </Link>\n                    </Grid.Column>\n\n                    <Grid.Column width={12}>\n                        <h2>{recipe.name}</h2>\n                    </Grid.Column>\n\n                    <Grid.Column width={2}>\n                        <Button color='red' size='small' icon onClick={() => this.deleteRecipe(recipe.id)}>\n                            <Icon name='trash alternate' size='large' />\n                        </Button>\n                    </Grid.Column>\n                </Grid.Row>\n\n                <Grid.Row divided centered>\n                    <Grid.Column width={6}>\n                        <Image centered src={recipe.img} alt='recipe img' />\n                    </Grid.Column>\n\n                    <Grid.Column verticalAlign=\"middle\" width={3}>\n                        <h3>{recipe.servings}</h3>\n                        Servings\n                    </Grid.Column>\n\n                    <Grid.Column verticalAlign='middle' width={3}>\n                        <h3>{Math.round(recipe.calories / recipe.servings)}</h3>\n                        Calories/Serving:\n                    </Grid.Column>\n                </Grid.Row>\n\n                <Grid.Row divided centered style={{ height: '70vh', padding: '0 0 20px 0' }}>\n                    <Grid.Column textAlign='left' stretched width={5}>\n                        <h3>Ingredients:</h3>\n                        {ingredientsList}\n                    </Grid.Column>\n\n                    <Grid.Column textAlign='center' width={5}>\n                        <h3>Preparation</h3>\n                        <a target='_blank' rel=\"noopener noreferrer\" href={recipe.instructions}><h4>Instructions</h4></a>\n                    </Grid.Column>\n                </Grid.Row>\n\n            </Grid>\n        )\n    }\n}\n\n","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\nimport axios from 'axios'\nimport { setAxiosDefaults, userIsLoggedIn } from './util/SessionHeaderUtil'\nimport SignUpLogIn from './components/SignUpLogIn';\nimport RecipesList from './components/RecipesList';\nimport GlobalNav from './components/GlobalNav';\nimport Recipe from './components/Recipe';\n\n\nclass App extends Component {\n  state = {\n    signedIn: false,\n    recipes: [],\n    newRecipe: {\n      name: '',\n      ingredients: '',\n      servings: '',\n      calories: '',\n      instructions: '',\n      img: ''\n    }\n  }\n\n   componentDidMount = async () => {\n    const signedIn = userIsLoggedIn()\n\n    let recipes = []\n    if (signedIn) {\n      setAxiosDefaults()\n      recipes = await this.getRecipes()\n    }\n\n    this.setState({\n      recipes,\n      signedIn\n    })\n  }\n\n  getRecipes = async () => {\n    const response = await axios.get('/recipes')\n    return response.data\n  }\n\n  addNewRecipe = async (name, ingredients, servings, calories, instructions, img) => {\n    const newRecipe = { ...this.state.newRecipe }\n    newRecipe.name = name\n    newRecipe.ingredients = ingredients\n    newRecipe.servings = servings\n    newRecipe.calories= calories\n    newRecipe.instructions = instructions\n    newRecipe.img = img\n    await this.setState({ newRecipe })\n    this.handleSubmitRecipe()\n  }\n\n  handleSubmitRecipe = async () => {\n    await axios.post('/recipes', this.state.newRecipe)\n    const recipes = await this.getRecipes()\n    this.setState({\n      newRecipe: {\n        name: '',\n        ingredients: '',\n        servings: '',\n        calories: '',\n        instructions: '',\n        img: ''\n      },\n      recipes\n    })\n  }\n\n  deleteRecipe = async (recipeId) => {\n    await axios.delete(`/recipes/${recipeId}`)\n    const recipes = await this.getRecipes()\n    this.setState({ recipes })\n  }\n\n  setUserSignedIn = async () => {\n    const recipes = await this.getRecipes()\n    this.setState({\n      signedIn: true,\n      recipes\n    })\n  }\n\n  signOut = () => {\n    this.setState({\n      signedIn: false,\n      recipes: []\n    })\n  }\n\n  render() {\n\n    const SignUpLogInComponent = () => (\n      <SignUpLogIn setUserSignedIn={this.setUserSignedIn} />\n    )\n\n    const RecipesComponent = () => (\n      <RecipesList\n        recipes={this.state.recipes}\n        addNewRecipe={this.addNewRecipe}\n      />\n    )\n\n    return (\n      <Router >\n        <div className='App'>\n          <GlobalNav signedIn={this.state.signedIn} signOut={this.signOut} />\n\n          <Switch>\n            <Route exact path='/' render={SignUpLogInComponent} />\n            <Route exact path='/recipes' render={RecipesComponent} />\n            <Route exact path='/recipes/:id' component={Recipe} />\n          </Switch>\n\n          {this.state.signedIn ? <Redirect to='/recipes' /> : <Redirect to='/' />}\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}